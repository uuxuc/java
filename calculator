import javafx.application.Application;
import javafx.beans.binding.Bindings;
import javafx.beans.property.DoubleProperty;
import javafx.beans.property.SimpleDoubleProperty;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.TextField;
import javafx.scene.layout.GridPane;
import javafx.stage.Stage;
public class JavaFXCalculator extends Application {
    private DoubleProperty result = new SimpleDoubleProperty(0);
    private TextField display = new TextField();
    private StringBuilder currentInput = new StringBuilder();
    private String operator = "";
    private double firstOperand = 0;
    public static void main(String[] args) {
        launch(args);
    }
    @Override
    public void start(Stage stage) {
        display.setEditable(false);
        display.setStyle("-fx-font-size: 2em;");
        display.setAlignment(Pos.CENTER_RIGHT);
        GridPane grid = new GridPane();
        grid.setHgap(10);
        grid.setVgap(10);
        grid.setAlignment(Pos.CENTER);
        String[] buttons = {
            "7", "8", "9", "/",
            "4", "5", "6", "*",
            "1", "2", "3", "-",
            "0", ".", "=", "+"
        };
        int index = 0;
        for (int row = 0; row < 4; row++) {
            for (int col = 0; col < 4; col++) {
                Button button = new Button(buttons[index]);
                button.setStyle("-fx-font-size: 2em;");
                button.setMinSize(80, 80);
                button.setOnAction(e -> handleButtonClick(button.getText()));
                grid.add(button, col, row);
                index++;
            }
        }
        Button clearButton = new Button("C");
        clearButton.setStyle("-fx-font-size: 2em;");
        clearButton.setMinSize(80, 80);
        clearButton.setOnAction(e -> clear());
        grid.add(clearButton, 0, 4, 4, 1);
        grid.add(display, 0, 0, 4, 1);
        Scene scene = new Scene(grid, 400, 500);
        stage.setTitle("JavaFX Calculator");
        stage.setScene(scene);
        stage.show();
    }
    private void handleButtonClick(String text) {
        switch (text) {
            case "=":
                calculateResult();
                break;
            case "+":
            case "-":
            case "*":
            case "/":
                if (currentInput.length() > 0) {
                    firstOperand = Double.parseDouble(currentInput.toString());
                    operator = text;
                    currentInput.setLength(0); 
                }
                break;
            case "C":
                clear();
                break;
            default:
                currentInput.append(text);
                display.setText(currentInput.toString());
                break;
        }
    }
    private void calculateResult() {
        if (currentInput.length() > 0) {
            double secondOperand = Double.parseDouble(currentInput.toString());
            double resultValue = 0;
            switch (operator) {
                case "+":
                    resultValue = firstOperand + secondOperand;
                    break;
                case "-":
                    resultValue = firstOperand - secondOperand;
                    break;
                case "*":
                    resultValue = firstOperand * secondOperand;
                    break;
                case "/":
                    if (secondOperand != 0) {
                        resultValue = firstOperand / secondOperand;
                    } else {
                        display.setText("Error");
                        return;
                    }
                    break;
            }
            display.setText(String.valueOf(resultValue));
            currentInput.setLength(0); // Clear input for next calculation
        }
    }
    private void clear() {
        currentInput.setLength(0);
        display.clear();
        operator = "";
        firstOperand = 0;
    }
}
